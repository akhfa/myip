version: 2

project_name: myip

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - main: ./main.go
    binary: myip
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
    flags:
      - -trimpath

universal_binaries:
  - replace: true

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else }}{{ .Arch }}{{ end }}
    files:
      - README.md
      - LICENSE

checksum:
  name_template: 'checksums.txt'

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^chore:"
      - "^style:"
      - "^refactor:"
      - Merge pull request
      - Merge branch
      - go mod tidy
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Performance improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: Others
      order: 999

dockers:
  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:latest-amd64"
    dockerfile: Dockerfile.goreleaser
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
    extra_files:
      - LICENSE
      - README.md

  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:latest-arm64"
    dockerfile: Dockerfile.goreleaser
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"
    goarch: arm64
    extra_files:
      - LICENSE
      - README.md

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:latest"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:latest-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:latest-arm64"

release:
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: "{{ .Env.GITHUB_REPOSITORY_NAME }}"
  draft: false
  prerelease: auto
  mode: replace
  header: |
    ## My IP {{ .Tag }} ({{ .Date }})
    
    Welcome to this new release of My IP!

  footer: |
    ## Docker Images
    
    Docker images are available at:
    - `ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}`
    - `ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:latest`
    
    ## Installation
    
    ### Download binary
    1. Download the appropriate binary for your platform from the assets below
    2. Make it executable: `chmod +x myip`
    3. Run: `./myip`
    
    ### Docker
    ```bash
    docker run -p 8080:8080 ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}:{{ .Tag }}
    ```
    
    ### Go Install
    ```bash
    go install github.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}@{{ .Tag }}
    ```

  name_template: "{{.ProjectName}}-v{{.Version}}"

nfpms:
  - id: packages
    package_name: myip
    file_name_template: "{{ .ConventionalFileName }}"
    vendor: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    homepage: "https://github.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}"
    maintainer: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    description: |-
      My IP - A simple HTTP service to detect client IP addresses
      with support for various proxy headers and detailed IP information.
    license: "AGPL-3.0"
    formats:
      - deb
      - rpm
      - apk
    dependencies:
      - ca-certificates
    recommends:
      - git
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/myip/copyright
        file_info:
          mode: 0644
      - src: ./README.md
        dst: /usr/share/doc/myip/README.md
        file_info:
          mode: 0644

milestones:
  - close: true
    fail_on_error: false
    name_template: "{{ .Tag }}"
